{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component, EventEmitter, Output, Input } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nlet CreateTransactionComponent = class CreateTransactionComponent {\n  constructor(fb, clientService, transactionService, messageService) {\n    this.fb = fb;\n    this.clientService = clientService;\n    this.transactionService = transactionService;\n    this.messageService = messageService;\n    this.display = false;\n    this.displayChange = new EventEmitter();\n    this.transactionCreated = new EventEmitter();\n    this.accounts = [];\n    this.createTransactionForm = this.fb.group({\n      AccountId: [\"\", Validators.required],\n      Amount: [\"\", Validators.required],\n      TransactionDate: [\"\", Validators.required],\n      TransactionType: [\"\", Validators.required]\n    });\n  }\n  ngOnInit() {\n    this.loadAccounts();\n  }\n  loadClients() {\n    this.clientService.getClients(\"client\").subscribe(clients => {\n      this.clients = clients;\n      this.calculateTransactions();\n    }, error => console.error(\"Failed to load clients\", error));\n  }\n  onCreate() {\n    if (this.createTransactionForm.valid) {\n      const newTransaction = this.createTransactionForm.value;\n      this.transactionService.createTransaction(newTransaction).subscribe(() => {\n        this.messageService.add({\n          severity: \"success\",\n          summary: \"Success\",\n          detail: \"Transaction created successfully\"\n        });\n        this.createTransactionForm.reset();\n        this.displayChange.emit(false);\n        this.transactionCreated.emit();\n      }, error => {\n        console.error(\"Failed to create transaction\", error);\n        this.messageService.add({\n          severity: \"error\",\n          summary: \"Error\",\n          detail: \"Failed to create transaction\"\n        });\n      });\n    }\n  }\n  onHide() {\n    this.transactionCreated.emit();\n  }\n};\n__decorate([Input()], CreateTransactionComponent.prototype, \"display\", void 0);\n__decorate([Output()], CreateTransactionComponent.prototype, \"displayChange\", void 0);\n__decorate([Output()], CreateTransactionComponent.prototype, \"transactionCreated\", void 0);\nCreateTransactionComponent = __decorate([Component({\n  selector: \"app-create-transaction\",\n  templateUrl: \"./create-transaction.component.html\",\n  styleUrls: [\"./create-transaction.component.css\"]\n})], CreateTransactionComponent);\nexport { CreateTransactionComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}