{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/transaction.service\";\nimport * as i2 from \"../../services/client.service\";\nimport * as i3 from \"./../../services/date-util.service\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/panel\";\nimport * as i8 from \"../create-transaction/create-transaction.component\";\nimport * as i9 from \"@angular/common\";\nfunction TransactionsComponent_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4, \"Description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Amount\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Type\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TransactionsComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"td\");\n    i0.ɵɵtext(7);\n    i0.ɵɵpipe(8, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 4, transaction_r2.TransactionDate));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(transaction_r2.Description);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(8, 6, transaction_r2.Amount));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(transaction_r2.TransactionType);\n  }\n}\nexport let TransactionsComponent = /*#__PURE__*/(() => {\n  class TransactionsComponent {\n    constructor(transactionService, clientService, dateUtilService) {\n      this.transactionService = transactionService;\n      this.clientService = clientService;\n      this.dateUtilService = dateUtilService;\n      this.transactions = [];\n      this.clients = [];\n      this.selectedClient = null;\n      this.display = false;\n    }\n    ngOnInit() {\n      console.log(\"01\");\n      this.loadTransactions();\n    }\n    loadClients() {\n      this.clientService.getClients(\"client\").subscribe(clients => {\n        this.clients = clients;\n        if (this.clients.length > 0) {\n          this.selectedClient = this.clients[0];\n          this.loadTransactions();\n        }\n      }, error => console.error(\"Failed to load clients\", error));\n    }\n    loadTransactions() {\n      console.log('02');\n      const accountId = 0;\n      const startDate = `${this.dateUtilService.formatToBrazilianDate(new Date())}T00:00:01Z`;\n      const endDate = `${this.dateUtilService.formatToBrazilianDate(new Date())}T23:59:59Z`;\n      console.log('aqui');\n      this.transactionService.getTransactions(accountId, startDate, endDate).subscribe(transactions => {\n        this.transactions = transactions;\n        console.log('caiu aqui dentro');\n      }, error => console.error(\"Failed to load transactions\", error));\n    }\n    showCreateTransactionDialog() {\n      this.display = true;\n    }\n    onTransactionCreated() {\n      this.display = false;\n      this.loadTransactions();\n    }\n  }\n  TransactionsComponent.ɵfac = function TransactionsComponent_Factory(t) {\n    return new (t || TransactionsComponent)(i0.ɵɵdirectiveInject(i1.TransactionService), i0.ɵɵdirectiveInject(i2.ClientService), i0.ɵɵdirectiveInject(i3.DateUtilService));\n  };\n  TransactionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionsComponent,\n    selectors: [[\"app-transactions\"]],\n    decls: 7,\n    vars: 2,\n    consts: [[1, \"transactions\"], [\"header\", \"Transactions\", \"styleClass\", \"transactions-panel\"], [\"label\", \"Add Transaction\", \"icon\", \"pi pi-plus\", 3, \"click\"], [3, \"value\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [3, \"display\", \"transactionCreated\", \"displayChange\"]],\n    template: function TransactionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"p-button\", 2);\n        i0.ɵɵlistener(\"click\", function TransactionsComponent_Template_p_button_click_2_listener() {\n          return ctx.showCreateTransactionDialog();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"p-table\", 3);\n        i0.ɵɵtemplate(4, TransactionsComponent_ng_template_4_Template, 9, 0, \"ng-template\", 4);\n        i0.ɵɵtemplate(5, TransactionsComponent_ng_template_5_Template, 11, 8, \"ng-template\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"app-create-transaction\", 6);\n        i0.ɵɵlistener(\"transactionCreated\", function TransactionsComponent_Template_app_create_transaction_transactionCreated_6_listener() {\n          return ctx.onTransactionCreated();\n        })(\"displayChange\", function TransactionsComponent_Template_app_create_transaction_displayChange_6_listener($event) {\n          return ctx.display = $event;\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", ctx.transactions);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"display\", ctx.display);\n      }\n    },\n    dependencies: [i4.Button, i5.PrimeTemplate, i6.Table, i7.Panel, i8.CreateTransactionComponent, i9.CurrencyPipe, i9.DatePipe],\n    styles: [\".transactions-panel[_ngcontent-%COMP%]{margin-top:20px}\"]\n  });\n  return TransactionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}