{"ast":null,"code":"import { EventEmitter } from \"@angular/core\";\nimport { Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/client.service\";\nimport * as i3 from \"primeng/api\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/inputtext\";\nimport * as i6 from \"primeng/dialog\";\nconst _c0 = function () {\n  return {\n    width: \"400px\"\n  };\n};\nexport let CreateClientComponent = /*#__PURE__*/(() => {\n  class CreateClientComponent {\n    constructor(fb, clientService, messageService) {\n      this.fb = fb;\n      this.clientService = clientService;\n      this.messageService = messageService;\n      this.display = false;\n      this.displayChange = new EventEmitter();\n      this.clientCreated = new EventEmitter();\n      this.createClientForm = this.fb.group({\n        FirstName: [\"\", Validators.required],\n        LastName: [\"\", Validators.required],\n        Email: [\"\", [Validators.required, Validators.email]],\n        DateOfBirth: [\"\", Validators.required],\n        Password: [\"\", Validators.required],\n        Role: [\"client\"]\n      });\n    }\n    onCreate() {\n      if (this.createClientForm.valid) {\n        const newClient = this.createClientForm.value;\n        this.clientService.createClient(newClient).subscribe(() => {\n          this.messageService.add({\n            severity: \"success\",\n            summary: \"Success\",\n            detail: \"Client created successfully\"\n          });\n          this.createClientForm.reset();\n          this.displayChange.emit(false);\n          this.clientCreated.emit();\n        }, error => {\n          console.error(\"Failed to create client\", error);\n          this.messageService.add({\n            severity: \"error\",\n            summary: \"Error\",\n            detail: \"Failed to create client\"\n          });\n        });\n      }\n    }\n  }\n  CreateClientComponent.ɵfac = function CreateClientComponent_Factory(t) {\n    return new (t || CreateClientComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ClientService), i0.ɵɵdirectiveInject(i3.MessageService));\n  };\n  CreateClientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateClientComponent,\n    selectors: [[\"app-create-client\"]],\n    inputs: {\n      display: \"display\"\n    },\n    outputs: {\n      displayChange: \"displayChange\",\n      clientCreated: \"clientCreated\"\n    },\n    decls: 26,\n    vars: 8,\n    consts: [[\"header\", \"Create Client\", 3, \"visible\", \"modal\", \"closable\", \"visibleChange\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"p-fluid\"], [1, \"p-field\"], [\"for\", \"FirstName\"], [\"id\", \"FirstName\", \"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"FirstName\"], [\"for\", \"LastName\"], [\"id\", \"LastName\", \"type\", \"text\", \"pInputText\", \"\", \"formControlName\", \"LastName\"], [\"for\", \"Email\"], [\"id\", \"Email\", \"type\", \"email\", \"pInputText\", \"\", \"formControlName\", \"Email\"], [\"for\", \"DateOfBirth\"], [\"id\", \"DateOfBirth\", \"type\", \"date\", \"pInputText\", \"\", \"formControlName\", \"DateOfBirth\"], [\"for\", \"Password\"], [\"id\", \"Password\", \"type\", \"password\", \"pInputText\", \"\", \"formControlName\", \"Password\"], [\"label\", \"Create\", \"type\", \"submit\", 3, \"disabled\"], [\"label\", \"Cancel\", \"type\", \"button\", 3, \"click\"]],\n    template: function CreateClientComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p-dialog\", 0);\n        i0.ɵɵlistener(\"visibleChange\", function CreateClientComponent_Template_p_dialog_visibleChange_0_listener($event) {\n          return ctx.display = $event;\n        });\n        i0.ɵɵelementStart(1, \"form\", 1);\n        i0.ɵɵlistener(\"ngSubmit\", function CreateClientComponent_Template_form_ngSubmit_1_listener() {\n          return ctx.onCreate();\n        });\n        i0.ɵɵelementStart(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Primeiro Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"input\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"label\", 6);\n        i0.ɵɵtext(9, \"Last Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 3)(12, \"label\", 8);\n        i0.ɵɵtext(13, \"Email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 3)(16, \"label\", 10);\n        i0.ɵɵtext(17, \"Date of Birth\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(18, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 3)(20, \"label\", 12);\n        i0.ɵɵtext(21, \"Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"input\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(23, \"p-footer\");\n        i0.ɵɵelement(24, \"p-button\", 14);\n        i0.ɵɵelementStart(25, \"p-button\", 15);\n        i0.ɵɵlistener(\"click\", function CreateClientComponent_Template_p_button_click_25_listener() {\n          return ctx.display = false;\n        });\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(7, _c0));\n        i0.ɵɵproperty(\"visible\", ctx.display)(\"modal\", true)(\"closable\", false);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"formGroup\", ctx.createClientForm);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"disabled\", ctx.createClientForm.invalid);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.Button, i3.Footer, i5.InputText, i6.Dialog],\n    styles: [\".p-dialog[_ngcontent-%COMP%]   .p-fluid[_ngcontent-%COMP%]   .p-field[_ngcontent-%COMP%]{margin-bottom:20px}\"]\n  });\n  return CreateClientComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}