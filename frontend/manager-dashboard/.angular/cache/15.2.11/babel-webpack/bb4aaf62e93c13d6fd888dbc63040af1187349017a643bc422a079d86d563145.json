{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/client.service\";\nimport * as i2 from \"../../services/account.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/panel\";\nimport * as i6 from \"primeng/dropdown\";\nexport let AccountManagementComponent = /*#__PURE__*/(() => {\n  class AccountManagementComponent {\n    constructor(clientService, accountService) {\n      this.clientService = clientService;\n      this.accountService = accountService;\n      this.clients = [];\n      this.selectedClient = null;\n    }\n    ngOnInit() {\n      this.loadClients();\n    }\n    loadClients() {\n      this.clientService.getClients(\"client\").subscribe(clients => this.clients = clients, error => console.error(\"Failed to load clients\", error));\n    }\n    createAccount() {\n      if (this.selectedClient) {\n        const accountNumber = this.generateAccountNumber();\n        const payload = {\n          AccountNumber: accountNumber,\n          Balance: 0.0,\n          ClientId: this.selectedClient.Id\n        };\n        this.accountService.createAccount(payload).subscribe(response => {\n          console.log(\"Account created successfully:\", response);\n          this.loadClients();\n        }, error => console.error(\"Failed to create account\", error));\n      }\n    }\n    closeAccount() {\n      if (this.selectedClient) {\n        const payload = {\n          ClientId: this.selectedClient.Id\n        };\n        this.accountService.deleteAccount(payload).subscribe(response => {\n          console.log(\"Account removed successfully:\", response);\n        }, error => console.error(error.message, error));\n      }\n      this.loadClients();\n    }\n    generateAccountNumber() {\n      const chars = \"0123456789\";\n      let accountNumber = \"\";\n      for (let i = 0; i < 10; i++) {\n        accountNumber += chars.charAt(Math.floor(Math.random() * chars.length));\n      }\n      return accountNumber;\n    }\n  }\n  AccountManagementComponent.ɵfac = function AccountManagementComponent_Factory(t) {\n    return new (t || AccountManagementComponent)(i0.ɵɵdirectiveInject(i1.ClientService), i0.ɵɵdirectiveInject(i2.AccountService));\n  };\n  AccountManagementComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AccountManagementComponent,\n    selectors: [[\"app-account-management\"]],\n    decls: 10,\n    vars: 2,\n    consts: [[1, \"account-management\"], [\"header\", \"Gerenciar contas\", \"styleClass\", \"account-management-panel\"], [1, \"p-fluid\"], [1, \"p-field\"], [\"for\", \"client\"], [\"optionLabel\", \"FirstName\", \"placeholder\", \"Selecione um cliente\", 3, \"options\", \"ngModel\", \"ngModelChange\"], [\"label\", \"Criar conta\", 3, \"onClick\"], [\"label\", \"Remover conta\", \"styleClass\", \"p-button-danger\", 3, \"onClick\"]],\n    template: function AccountManagementComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"label\", 4);\n        i0.ɵɵtext(5, \"Selecionar cliente\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p-dropdown\", 5);\n        i0.ɵɵlistener(\"ngModelChange\", function AccountManagementComponent_Template_p_dropdown_ngModelChange_6_listener($event) {\n          return ctx.selectedClient = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(7, \"div\", 3)(8, \"p-button\", 6);\n        i0.ɵɵlistener(\"onClick\", function AccountManagementComponent_Template_p_button_onClick_8_listener() {\n          return ctx.createAccount();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p-button\", 7);\n        i0.ɵɵlistener(\"onClick\", function AccountManagementComponent_Template_p_button_onClick_9_listener() {\n          return ctx.closeAccount();\n        });\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"options\", ctx.clients)(\"ngModel\", ctx.selectedClient);\n      }\n    },\n    dependencies: [i3.NgControlStatus, i3.NgModel, i4.Button, i5.Panel, i6.Dropdown],\n    styles: [\".account-management-panel[_ngcontent-%COMP%]{margin-top:20px}.p-button[_ngcontent-%COMP%]{margin-right:10px}\"]\n  });\n  return AccountManagementComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}