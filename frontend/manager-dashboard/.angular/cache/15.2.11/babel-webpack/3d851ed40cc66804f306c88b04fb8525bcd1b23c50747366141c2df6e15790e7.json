{"ast":null,"code":"import { format } from \"date-fns\";\nimport { ptBR } from \"date-fns/locale\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/transaction.service\";\nimport * as i2 from \"../../services/client.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/api\";\nimport * as i6 from \"primeng/table\";\nimport * as i7 from \"primeng/panel\";\nimport * as i8 from \"primeng/dropdown\";\nimport * as i9 from \"primeng/calendar\";\nimport * as i10 from \"../create-transaction/create-transaction.component\";\nimport * as i11 from \"@angular/common\";\nfunction TransactionsComponent_ng_template_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"th\");\n    i0.ɵɵtext(2, \"Data\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"th\");\n    i0.ɵɵtext(4, \"Valor\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Tipo\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction TransactionsComponent_ng_template_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"currency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const transaction_r2 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 3, transaction_r2.TransactionDate));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(6, 5, transaction_r2.Amount));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(transaction_r2.TransactionType);\n  }\n}\nexport let TransactionsComponent = /*#__PURE__*/(() => {\n  class TransactionsComponent {\n    constructor(transactionService, clientService) {\n      this.transactionService = transactionService;\n      this.clientService = clientService;\n      this.transactions = [];\n      this.clients = [];\n      this.selectedClient = null;\n      this.display = false;\n      this.startDate = null;\n      this.endDate = null;\n    }\n    ngOnInit() {\n      this.loadClients();\n    }\n    loadClients() {\n      this.clientService.getClients(\"client\").subscribe(clients => {\n        this.clients = clients;\n      }, error => console.error(\"Failed to load clients\", error));\n    }\n    loadTransactions() {\n      if (!this.selectedClient || !this.startDate || !this.endDate) {\n        return;\n      }\n      const accountId = this.selectedClient.Id || 0;\n      const startDateISOString = format(this.startDate, \"yyyy-MM-dd'T'HH:mm:ssXXX\", {\n        locale: ptBR\n      });\n      const endDateISOString = format(this.endDate, \"yyyy-MM-dd'T'HH:mm:ssXXX\", {\n        locale: ptBR\n      });\n      this.transactionService.getTransactions(accountId, startDateISOString, endDateISOString).subscribe(transactions => {\n        this.transactions = transactions;\n      }, error => console.error(\"Failed to load transactions\", error));\n    }\n    showCreateTransactionDialog() {\n      this.display = true;\n    }\n    onTransactionCreated() {\n      this.display = false;\n      this.loadTransactions();\n    }\n  }\n  TransactionsComponent.ɵfac = function TransactionsComponent_Factory(t) {\n    return new (t || TransactionsComponent)(i0.ɵɵdirectiveInject(i1.TransactionService), i0.ɵɵdirectiveInject(i2.ClientService));\n  };\n  TransactionsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TransactionsComponent,\n    selectors: [[\"app-transactions\"]],\n    decls: 21,\n    vars: 10,\n    consts: [[1, \"transactions\"], [\"header\", \"Transactions\", \"styleClass\", \"transactions-panel\"], [1, \"p-field\"], [\"for\", \"client\"], [\"id\", \"client\", \"optionLabel\", \"FirstName\", \"placeholder\", \"Select a client\", \"required\", \"\", 3, \"options\", \"ngModel\", \"showClear\", \"ngModelChange\"], [\"for\", \"startDate\"], [\"id\", \"startDate\", \"dateFormat\", \"yy-mm-dd\", \"required\", \"\", 3, \"ngModel\", \"showIcon\", \"ngModelChange\"], [\"for\", \"endDate\"], [\"id\", \"endDate\", \"dateFormat\", \"yy-mm-dd\", \"required\", \"\", 3, \"ngModel\", \"showIcon\", \"ngModelChange\"], [\"label\", \"Filter\", 3, \"disabled\", \"click\"], [\"label\", \"Nova Transaction\", \"icon\", \"pi pi-plus\", 3, \"click\"], [3, \"value\"], [\"pTemplate\", \"header\"], [\"pTemplate\", \"body\"], [3, \"display\", \"transactionCreated\", \"displayChange\"]],\n    template: function TransactionsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p-panel\", 1)(2, \"div\", 2)(3, \"label\", 3);\n        i0.ɵɵtext(4, \"Select Client\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"p-dropdown\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function TransactionsComponent_Template_p_dropdown_ngModelChange_5_listener($event) {\n          return ctx.selectedClient = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"div\", 2)(7, \"label\", 5);\n        i0.ɵɵtext(8, \"Start Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"p-calendar\", 6);\n        i0.ɵɵlistener(\"ngModelChange\", function TransactionsComponent_Template_p_calendar_ngModelChange_9_listener($event) {\n          return ctx.startDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(10, \"div\", 2)(11, \"label\", 7);\n        i0.ɵɵtext(12, \"End Date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p-calendar\", 8);\n        i0.ɵɵlistener(\"ngModelChange\", function TransactionsComponent_Template_p_calendar_ngModelChange_13_listener($event) {\n          return ctx.endDate = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(14, \"div\", 2)(15, \"p-button\", 9);\n        i0.ɵɵlistener(\"click\", function TransactionsComponent_Template_p_button_click_15_listener() {\n          return ctx.loadTransactions();\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"p-button\", 10);\n        i0.ɵɵlistener(\"click\", function TransactionsComponent_Template_p_button_click_16_listener() {\n          return ctx.showCreateTransactionDialog();\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"p-table\", 11);\n        i0.ɵɵtemplate(18, TransactionsComponent_ng_template_18_Template, 7, 0, \"ng-template\", 12);\n        i0.ɵɵtemplate(19, TransactionsComponent_ng_template_19_Template, 9, 7, \"ng-template\", 13);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"app-create-transaction\", 14);\n        i0.ɵɵlistener(\"transactionCreated\", function TransactionsComponent_Template_app_create_transaction_transactionCreated_20_listener() {\n          return ctx.onTransactionCreated();\n        })(\"displayChange\", function TransactionsComponent_Template_app_create_transaction_displayChange_20_listener($event) {\n          return ctx.display = $event;\n        });\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"options\", ctx.clients)(\"ngModel\", ctx.selectedClient)(\"showClear\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.startDate)(\"showIcon\", true);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.endDate)(\"showIcon\", true);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"disabled\", !ctx.selectedClient || !ctx.startDate || !ctx.endDate);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"value\", ctx.transactions);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"display\", ctx.display);\n      }\n    },\n    dependencies: [i3.NgControlStatus, i3.RequiredValidator, i3.NgModel, i4.Button, i5.PrimeTemplate, i6.Table, i7.Panel, i8.Dropdown, i9.Calendar, i10.CreateTransactionComponent, i11.CurrencyPipe, i11.DatePipe],\n    styles: [\".transactions-panel[_ngcontent-%COMP%]{margin-top:20px}\"]\n  });\n  return TransactionsComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}